{"ast":null,"code":"import _slicedToArray from\"/Users/kathi/Dropbox/Udemy/React/Expenses-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import Card from\"../UI/Card\";import ExpensesFilter from\"./ExpensesFilter\";import\"./Expenses.css\";import ExpensesList from\"../ExpensesList\";import ExpensesChart from\"./ExpensesChart\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Expenses=function Expenses(props){var _useState=useState(\"2021\"),_useState2=_slicedToArray(_useState,2),filteredYear=_useState2[0],setFilteredYear=_useState2[1];var filterChangeHandler=function filterChangeHandler(selectedYear){setFilteredYear(selectedYear);};var filteredExpenses=props.items.filter(function(expense){return expense.date.getFullYear().toString()===filteredYear;});return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(Card,{className:\"expenses\",children:[/*#__PURE__*/_jsx(ExpensesFilter,{selected:filteredYear,onChangeFilter:filterChangeHandler}),/*#__PURE__*/_jsx(ExpensesChart,{expenses:filteredExpenses}),/*#__PURE__*/_jsx(ExpensesList,{items:filteredExpenses})]})});};export default Expenses;","map":{"version":3,"sources":["/Users/kathi/Dropbox/Udemy/React/Expenses-App/src/components/Expenses/Expenses.js"],"names":["React","useState","Card","ExpensesFilter","ExpensesList","ExpensesChart","Expenses","props","filteredYear","setFilteredYear","filterChangeHandler","selectedYear","filteredExpenses","items","filter","expense","date","getFullYear","toString"],"mappings":"oKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,MAAOC,CAAAA,IAAP,KAAiB,YAAjB,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,CACA,MAAO,gBAAP,CACA,MAAOC,CAAAA,YAAP,KAAyB,iBAAzB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,C,wFAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAW,CACxB,cAAwCN,QAAQ,CAAC,MAAD,CAAhD,wCAAOO,YAAP,eAAqBC,eAArB,eAEA,GAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACC,YAAD,CAAkB,CAC1CF,eAAe,CAACE,YAAD,CAAf,CACH,CAFD,CAIA,GAAMC,CAAAA,gBAAgB,CAAGL,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAmB,SAACC,OAAD,CAAa,CACrD,MAAOA,CAAAA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,KAA0CV,YAAjD,CACH,CAFwB,CAAzB,CAIA,mBACI,kCACI,MAAC,IAAD,EAAM,SAAS,CAAC,UAAhB,wBACI,KAAC,cAAD,EACI,QAAQ,CAAEA,YADd,CAEI,cAAc,CAAEE,mBAFpB,EADJ,cAMI,KAAC,aAAD,EAAe,QAAQ,CAAEE,gBAAzB,EANJ,cAQI,KAAC,YAAD,EAAc,KAAK,CAAEA,gBAArB,EARJ,GADJ,EADJ,CAwCH,CAnDD,CAqDA,cAAeN,CAAAA,QAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport \"./Expenses.css\";\nimport ExpensesList from \"../ExpensesList\";\nimport ExpensesChart from \"./ExpensesChart\";\n\nconst Expenses = (props) => {\n    const [filteredYear, setFilteredYear] = useState(\"2021\");\n\n    const filterChangeHandler = (selectedYear) => {\n        setFilteredYear(selectedYear);\n    };\n\n    const filteredExpenses = props.items.filter((expense) => {\n        return expense.date.getFullYear().toString() === filteredYear;\n    });\n\n    return (\n        <div>\n            <Card className=\"expenses\">\n                <ExpensesFilter\n                    selected={filteredYear}\n                    onChangeFilter={filterChangeHandler}\n                />\n\n                <ExpensesChart expenses={filteredExpenses} />\n\n                <ExpensesList items={filteredExpenses} />\n                {/* ALTERNATIVE 2 */}\n                {/* {filteredExpenses.length === 0 ? (\n                    <p>No expenses found</p>\n                ) : (\n                    filteredExpenses.map((expense) => (\n                        <ExpenseItem\n                            key={expense.id}\n                            title={expense.title}\n                            amount={expense.amount}\n                            date={expense.date}\n                        />\n                    ))\n                )} */}\n\n                {/* ALTERNATIVE 1 */}\n                {/* {filteredExpenses.length === 0 && <p>No expenses found</p>}\n                {filteredExpenses.length > 0 &&\n                    filteredExpenses.map((expense) => (\n                        <ExpenseItem\n                            key={expense.id}\n                            title={expense.title}\n                            amount={expense.amount}\n                            date={expense.date}\n                        />\n                    ))}{\" \"}\n                */}\n            </Card>\n        </div>\n    );\n};\n\nexport default Expenses;\n"]},"metadata":{},"sourceType":"module"}