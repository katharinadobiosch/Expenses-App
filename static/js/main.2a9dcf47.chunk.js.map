{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","App.js","index.js"],"names":["ExpenseForm","props","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","event","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","className","type","value","onChange","target","min","step","max","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","id","Math","random","toString","onAddExpense","console","log","Card","classes","children","ExpensesFilter","selected","onChangeFilter","ExpenseDate","day","toLocaleString","month","year","getFullYear","ExpenseItem","ExpensesList","items","length","map","expense","ChartBar","barFillHeight","maxValue","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","selectedYear","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"maAmFeA,EAhFK,SAACC,GACjB,MAAwCC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA0CF,mBAAS,IAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KACA,EAAsCJ,mBAAS,IAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KAmCA,OACI,uBAAMC,SAtBY,SAACC,GACnBA,EAAMC,iBAEN,IAAMC,EAAc,CAChBC,MAAOV,EACPW,QAAST,EACTU,KAAM,IAAIC,KAAKT,IAGnBN,EAAMgB,kBAAkBL,GACxBR,EAAgB,IAChBE,EAAiB,IACjBE,EAAe,KAUf,UACI,sBAAKU,UAAU,wBAAf,UACI,sBAAKA,UAAU,uBAAf,UACI,yCACA,uBACIC,KAAK,OACLC,MAAOjB,EACPkB,SAzCO,SAACX,GACxBN,EAAgBM,EAAMY,OAAOF,aA2CrB,sBAAKF,UAAU,uBAAf,UACI,2CACA,uBACIC,KAAK,SACLI,IAAI,OACJC,KAAK,OACLJ,MAAOf,EACPgB,SA/CQ,SAACX,GACzBJ,EAAiBI,EAAMY,OAAOF,aAiDtB,sBAAKF,UAAU,uBAAf,UACI,0CACA,uBACIC,KAAK,OACLI,IAAI,aACJE,IAAI,aACJL,MAAOb,EACPc,SArDM,SAACX,GACvBF,EAAeE,EAAMY,OAAOF,gBAwDxB,sBAAKF,UAAU,uBAAf,UACI,wBAAQC,KAAK,SAAb,2BACA,wBAAQO,QAASzB,EAAM0B,SAAUR,KAAK,SAAtC,2BClCDS,G,MApCI,SAAC3B,GAChB,MAAkCC,oBAAS,GAA3C,mBAAO2B,EAAP,KAAkBC,EAAlB,KAoBA,OACI,sBAAKZ,UAAU,cAAf,UACKW,GACG,cAAC,EAAD,CACIZ,kBAtBe,SAACc,GAC5BD,GAAa,GACb,IAAMlB,EAAW,2BACVmB,GADU,IAEbC,GAAIC,KAAKC,SAASC,aAEtBlC,EAAMmC,aAAaxB,IAiBPe,SATW,WACvBG,GAAa,OAWPD,GACE,wBAAQH,QAlBQ,WACxBI,GAAa,GACbO,QAAQC,IAAI,uBAgBJ,kCC1BDC,G,MANF,SAACtC,GACV,IAAMuC,EAAU,QAAUvC,EAAMiB,UAEhC,OAAO,qBAAKA,UAAWsB,EAAhB,SAA0BvC,EAAMwC,aCkB5BC,G,MApBQ,SAACzC,GAKpB,OACI,qBAAKiB,UAAU,kBAAf,SACI,sBAAKA,UAAU,2BAAf,UACI,mDACA,yBAAQE,MAAOnB,EAAM0C,SAAUtB,SARb,SAACX,GAC3BT,EAAM2C,eAAelC,EAAMY,OAAOF,QAO1B,UACI,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,4BCALyB,G,YAdK,SAAC5C,GACjB,IAAM6C,EAAM7C,EAAMc,KAAKgC,eAAe,QAAS,CAAED,IAAK,YAChDE,EAAQ/C,EAAMc,KAAKgC,eAAe,QAAS,CAAEC,MAAO,SACpDC,EAAOhD,EAAMc,KAAKmC,cAExB,OACI,sBAAKhC,UAAU,eAAf,UACI,qBAAKA,UAAU,oBAAf,SAAoC4B,IACpC,qBAAK5B,UAAU,sBAAf,SAAsC8B,IACtC,qBAAK9B,UAAU,qBAAf,SAAqC+B,SCQlCE,G,MAdK,SAAClD,GACjB,OACI,6BACI,eAAC,EAAD,CAAMiB,UAAU,eAAhB,UACI,cAAC,EAAD,CAAaH,KAAMd,EAAMc,OACzB,sBAAKG,UAAU,4BAAf,UACI,6BAAKjB,EAAMY,QACX,sBAAKK,UAAU,sBAAf,cAAuCjB,EAAMa,oBCUlDsC,G,MAnBM,SAACnD,GAClB,OAA2B,IAAvBA,EAAMoD,MAAMC,OACL,oBAAIpC,UAAU,0BAAd,+BAIP,oBAAIA,UAAU,gBAAd,SACKjB,EAAMoD,MAAME,KAAI,SAACC,GAAD,OACb,cAAC,EAAD,CAEI3C,MAAO2C,EAAQ3C,MACfC,OAAQ0C,EAAQ1C,OAChBC,KAAMyC,EAAQzC,MAHTyC,EAAQxB,W,OCUlByB,G,YApBE,SAACxD,GACd,IAAIyD,EAAgB,KAMpB,OAJIzD,EAAM0D,SAAW,IACjBD,EAAgBzB,KAAK2B,MAAO3D,EAAMmB,MAAQnB,EAAM0D,SAAY,KAAO,KAInE,sBAAKzC,UAAU,YAAf,UACI,qBAAKA,UAAU,mBAAf,SACI,qBACIA,UAAU,kBACV2C,MAAO,CAAEC,OAAQJ,OAGzB,qBAAKxC,UAAU,mBAAf,SAAmCjB,EAAM8D,aCOtCC,EApBD,SAAC/D,GACX,IAAMgE,EAAkBhE,EAAMiE,WAAWX,KACrC,SAACY,GAAD,OAAeA,EAAU/C,SAEvBgD,EAAenC,KAAKR,IAAL,MAAAQ,KAAI,YAAQgC,IAEjC,OACI,qBAAK/C,UAAU,QAAf,SACKjB,EAAMiE,WAAWX,KAAI,SAACY,GAAD,OAClB,cAAC,EAAD,CAEI/C,MAAO+C,EAAU/C,MACjBuC,SAAUS,EACVL,MAAOI,EAAUJ,OAHZI,EAAUJ,aCWpBM,EAvBO,SAACpE,GACnB,IAD6B,EACvBqE,EAAkB,CACpB,CAAEP,MAAO,MAAO3C,MAAO,GACvB,CAAE2C,MAAO,MAAO3C,MAAO,GACvB,CAAE2C,MAAO,MAAO3C,MAAO,GACvB,CAAE2C,MAAO,MAAO3C,MAAO,GACvB,CAAE2C,MAAO,MAAO3C,MAAO,GACvB,CAAE2C,MAAO,MAAO3C,MAAO,GACvB,CAAE2C,MAAO,MAAO3C,MAAO,GACvB,CAAE2C,MAAO,MAAO3C,MAAO,GACvB,CAAE2C,MAAO,MAAO3C,MAAO,GACvB,CAAE2C,MAAO,MAAO3C,MAAO,GACvB,CAAE2C,MAAO,MAAO3C,MAAO,GACvB,CAAE2C,MAAO,MAAO3C,MAAO,IAbE,cAgBPnB,EAAMsE,UAhBC,IAgB7B,2BAAsC,CAAC,IAA5Bf,EAA2B,QAElCc,EADqBd,EAAQzC,KAAKyD,YACJpD,OAASoC,EAAQ1C,QAlBtB,8BAoB7B,OAAO,cAAC,EAAD,CAAOoD,WAAYI,KCsCfG,EArDE,SAACxE,GACd,MAAwCC,mBAAS,QAAjD,mBAAOwE,EAAP,KAAqBC,EAArB,KAMMC,EAAmB3E,EAAMoD,MAAMwB,QAAO,SAACrB,GACzC,OAAOA,EAAQzC,KAAKmC,cAAcf,aAAeuC,KAGrD,OACI,8BACI,eAAC,EAAD,CAAMxD,UAAU,WAAhB,UACI,cAAC,EAAD,CACIyB,SAAU+B,EACV9B,eAbY,SAACkC,GACzBH,EAAgBG,MAeR,cAAC,EAAD,CAAeP,SAAUK,IAEzB,cAAC,EAAD,CAAcvB,MAAOuB,UCzB/BG,EAAiB,CACnB,CACI/C,GAAI,KACJnB,MAAO,eACPC,OAAQ,MACRC,KAAM,IAAIC,KAAK,KAAM,EAAG,KAE5B,CACIgB,GAAI,KACJnB,MAAO,eACPC,OAAQ,OACRC,KAAM,IAAIC,KAAK,KAAM,EAAG,KAE5B,CACIgB,GAAI,KACJnB,MAAO,sBACPC,OAAQ,OACRC,KAAM,IAAIC,KAAK,KAAM,EAAG,KAE5B,CACIgB,GAAI,KACJnB,MAAO,0BACPC,OAAQ,IACRC,KAAM,IAAIC,KAAK,KAAM,EAAG,MAuBjBgE,EAnBH,WACR,MAAgC9E,mBAAS6E,GAAzC,mBAAOR,EAAP,KAAiBU,EAAjB,KAUA,OACI,gCACI,cAAC,EAAD,CAAY7C,aAVM,SAACoB,GACvByB,GAAY,SAACC,GACT,MAAM,CAAE1B,GAAR,mBAAoB0B,UASpB,cAAC,EAAD,CAAU7B,MAAOkB,QCtC7BY,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.2a9dcf47.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./ExpenseForm.css\";\n\nconst ExpenseForm = (props) => {\n    const [enteredTitle, setEnteredTitle] = useState(\"\");\n    const [enteredAmount, setEnteredAmount] = useState(\"\");\n    const [enteredDate, setEnteredDate] = useState(\"\");\n\n    const titleChangeHandler = (event) => {\n        setEnteredTitle(event.target.value);\n    };\n\n    const amountChangeHandler = (event) => {\n        setEnteredAmount(event.target.value);\n    };\n\n    const dateChangeHandler = (event) => {\n        setEnteredDate(event.target.value);\n    };\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n\n        const expenseData = {\n            title: enteredTitle,\n            amount: +enteredAmount,\n            date: new Date(enteredDate),\n        };\n\n        props.onSaveExpenseData(expenseData);\n        setEnteredTitle(\"\");\n        setEnteredAmount(\"\");\n        setEnteredDate(\"\");\n    };\n\n    // const updateUserData = (event) => {\n    //     let newValue = event.target.value;\n\n    //     switch(event.target.name)\n    // };\n\n    return (\n        <form onSubmit={submitHandler}>\n            <div className=\"new-expense__controls\">\n                <div className=\"new-expense__control\">\n                    <label>Name</label>\n                    <input\n                        type=\"text\"\n                        value={enteredTitle}\n                        onChange={titleChangeHandler}\n                    />\n                </div>\n                <div className=\"new-expense__control\">\n                    <label>Betrag</label>\n                    <input\n                        type=\"number\"\n                        min=\"0.01\"\n                        step=\"0.01\"\n                        value={enteredAmount}\n                        onChange={amountChangeHandler}\n                    />\n                </div>\n                <div className=\"new-expense__control\">\n                    <label>Datum</label>\n                    <input\n                        type=\"date\"\n                        min=\"2019-01-01\"\n                        max=\"2022-12-31\"\n                        value={enteredDate}\n                        onChange={dateChangeHandler}\n                    />\n                </div>\n            </div>\n            <div className=\"new-expense__actions\">\n                <button type=\"submit\">Hinzuf√ºgen</button>\n                <button onClick={props.onCancel} type=\"button\">\n                    Cancel\n                </button>\n            </div>\n        </form>\n    );\n};\n\nexport default ExpenseForm;\n","import React, { useState } from \"react\";\n\nimport ExpenseForm from \"./ExpenseForm\";\nimport \"./NewExpense.css\";\n\nconst NewExpense = (props) => {\n    const [isEditing, setIsEditing] = useState(false);\n\n    const saveExpenseDataHandler = (enteredExpenseData) => {\n        setIsEditing(false);\n        const expenseData = {\n            ...enteredExpenseData,\n            id: Math.random().toString(),\n        };\n        props.onAddExpense(expenseData);\n    };\n\n    const startEditingHandler = () => {\n        setIsEditing(true);\n        console.log(\"button was clicked\");\n    };\n\n    const stopEditingHandler = () => {\n        setIsEditing(false);\n    };\n\n    return (\n        <div className=\"new-expense\">\n            {isEditing && (\n                <ExpenseForm\n                    onSaveExpenseData={saveExpenseDataHandler}\n                    onCancel={stopEditingHandler}\n                />\n            )}\n            {!isEditing && (\n                <button onClick={startEditingHandler}>Add New Expense</button>\n            )}\n        </div>\n    );\n};\n\nexport default NewExpense;\n","import React from \"react\";\nimport \"./Card.css\";\n\nconst Card = (props) => {\n    const classes = \"card \" + props.className;\n\n    return <div className={classes}>{props.children}</div>;\n};\n\nexport default Card;\n","import React from \"react\";\n\nimport \"./ExpensesFilter.css\";\n\nconst ExpensesFilter = (props) => {\n    const dropdownChangeHandler = (event) => {\n        props.onChangeFilter(event.target.value);\n    };\n\n    return (\n        <div className=\"expenses-filter\">\n            <div className=\"expenses-filter__control\">\n                <label>Filter by year</label>\n                <select value={props.selected} onChange={dropdownChangeHandler}>\n                    <option value=\"2022\">2022</option>\n                    <option value=\"2021\">2021</option>\n                    <option value=\"2020\">2020</option>\n                    <option value=\"2019\">2019</option>\n                </select>\n            </div>\n        </div>\n    );\n};\n\nexport default ExpensesFilter;\n","import React from \"react\";\nimport \"./ExpenseDate.css\";\n\nconst ExpenseDate = (props) => {\n    const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\n    const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\n    const year = props.date.getFullYear();\n\n    return (\n        <div className=\"expense-date\">\n            <div className=\"expense-date__day\">{day}</div>\n            <div className=\"expense-date__month\">{month}</div>\n            <div className=\"expense-date__year\">{year}</div>\n        </div>\n    );\n};\n\nexport default ExpenseDate;\n","import React from \"react\";\n\nimport ExpenseDate from \"./ExpenseDate\";\nimport Card from \"../UI/Card\";\nimport \"./ExpenseItem.css\";\n\nconst ExpenseItem = (props) => {\n    return (\n        <li>\n            <Card className=\"expense-item\">\n                <ExpenseDate date={props.date} />\n                <div className=\"expense-item__description\">\n                    <h2>{props.title}</h2>\n                    <div className=\"expense-item__price\">${props.amount}</div>\n                </div>\n            </Card>\n        </li>\n    );\n};\n\nexport default ExpenseItem;\n","import React from \"react\";\nimport ExpenseItem from \"./Expenses/ExpenseItem\";\nimport \"./ExpensesList.css\";\n\nconst ExpensesList = (props) => {\n    if (props.items.length === 0) {\n        return <h2 className=\"expenses-list__fallback\">No expenses found</h2>;\n    }\n\n    return (\n        <ul className=\"expenses-list\">\n            {props.items.map((expense) => (\n                <ExpenseItem\n                    key={expense.id}\n                    title={expense.title}\n                    amount={expense.amount}\n                    date={expense.date}\n                />\n            ))}\n        </ul>\n    );\n};\n\nexport default ExpensesList;\n","import React from \"react\";\nimport \"./ChartBar.css\";\n\nconst ChartBar = (props) => {\n    let barFillHeight = \"0%\";\n\n    if (props.maxValue > 0) {\n        barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\n    }\n\n    return (\n        <div className=\"chart-bar\">\n            <div className=\"chart-bar__inner\">\n                <div\n                    className=\"chart-bar__fill\"\n                    style={{ height: barFillHeight }}\n                ></div>\n            </div>\n            <div className=\"chart-bar__label\">{props.label}</div>\n        </div>\n    );\n};\n\nexport default ChartBar;\n","import React from \"react\";\nimport \"./Chart.css\";\n\nimport ChartBar from \"./ChartBar\";\n\nconst Chart = (props) => {\n    const dataPointValues = props.dataPoints.map(\n        (dataPoint) => dataPoint.value\n    );\n    const totalMaximum = Math.max(...dataPointValues);\n\n    return (\n        <div className=\"chart\">\n            {props.dataPoints.map((dataPoint) => (\n                <ChartBar\n                    key={dataPoint.label}\n                    value={dataPoint.value}\n                    maxValue={totalMaximum}\n                    label={dataPoint.label}\n                />\n            ))}\n        </div>\n    );\n};\n\nexport default Chart;\n","import React from \"react\";\nimport Chart from \"../Chart/Chart\";\n\nconst ExpensesChart = (props) => {\n    const chartDataPoints = [\n        { label: \"Jan\", value: 0 },\n        { label: \"Feb\", value: 0 },\n        { label: \"Mrz\", value: 0 },\n        { label: \"Apr\", value: 0 },\n        { label: \"Mai\", value: 0 },\n        { label: \"Jun\", value: 0 },\n        { label: \"Jul\", value: 0 },\n        { label: \"Aug\", value: 0 },\n        { label: \"Sep\", value: 0 },\n        { label: \"Okt\", value: 0 },\n        { label: \"Nov\", value: 0 },\n        { label: \"Dez\", value: 0 },\n    ];\n\n    for (const expense of props.expenses) {\n        const expenseMonth = expense.date.getMonth();\n        chartDataPoints[expenseMonth].value += expense.amount;\n    }\n    return <Chart dataPoints={chartDataPoints} />;\n};\n\nexport default ExpensesChart;\n","import React, { useState } from \"react\";\n\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport \"./Expenses.css\";\nimport ExpensesList from \"../ExpensesList\";\nimport ExpensesChart from \"./ExpensesChart\";\n\nconst Expenses = (props) => {\n    const [filteredYear, setFilteredYear] = useState(\"2021\");\n\n    const filterChangeHandler = (selectedYear) => {\n        setFilteredYear(selectedYear);\n    };\n\n    const filteredExpenses = props.items.filter((expense) => {\n        return expense.date.getFullYear().toString() === filteredYear;\n    });\n\n    return (\n        <div>\n            <Card className=\"expenses\">\n                <ExpensesFilter\n                    selected={filteredYear}\n                    onChangeFilter={filterChangeHandler}\n                />\n\n                <ExpensesChart expenses={filteredExpenses} />\n\n                <ExpensesList items={filteredExpenses} />\n                {/* ALTERNATIVE 2 */}\n                {/* {filteredExpenses.length === 0 ? (\n                    <p>No expenses found</p>\n                ) : (\n                    filteredExpenses.map((expense) => (\n                        <ExpenseItem\n                            key={expense.id}\n                            title={expense.title}\n                            amount={expense.amount}\n                            date={expense.date}\n                        />\n                    ))\n                )} */}\n\n                {/* ALTERNATIVE 1 */}\n                {/* {filteredExpenses.length === 0 && <p>No expenses found</p>}\n                {filteredExpenses.length > 0 &&\n                    filteredExpenses.map((expense) => (\n                        <ExpenseItem\n                            key={expense.id}\n                            title={expense.title}\n                            amount={expense.amount}\n                            date={expense.date}\n                        />\n                    ))}{\" \"}\n                */}\n            </Card>\n        </div>\n    );\n};\n\nexport default Expenses;\n","import React, { useState } from \"react\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport Expenses from \"./components/Expenses/Expenses\";\n\nconst DUMMY_EXPENSES = [\n    {\n        id: \"e1\",\n        title: \"Toilet Paper\",\n        amount: 94.12,\n        date: new Date(2020, 7, 14),\n    },\n    {\n        id: \"e2\",\n        title: \"New beige TV\",\n        amount: 799.49,\n        date: new Date(2021, 2, 12),\n    },\n    {\n        id: \"e3\",\n        title: \"Beige Car Insurance\",\n        amount: 294.67,\n        date: new Date(2021, 2, 28),\n    },\n    {\n        id: \"e4\",\n        title: \"New beige Desk (Wooden)\",\n        amount: 450.0,\n        date: new Date(2021, 5, 12),\n    },\n];\n\nconst App = () => {\n    const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n    const addExpenseHandler = (expense) => {\n        setExpenses((prevExpenses) => {\n            return [expense, ...prevExpenses];\n        });\n        // console.log(\"In App.js\");\n        // console.log(expense);\n    };\n\n    return (\n        <div>\n            <NewExpense onAddExpense={addExpenseHandler} />\n            <Expenses items={expenses} />\n        </div>\n    );\n};\n\nexport default App;\n","import React from \"react\";\n\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}